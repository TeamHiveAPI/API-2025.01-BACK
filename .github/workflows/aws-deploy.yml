name: ðŸš€ Deploy Backend Docker to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy-to-ec2:
    name: Build & Deploy Docker on EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH key
        run: |
          echo "${{ secrets.ACADEMY_KEY_PEM }}" > api4.pem
          chmod 400 api4.pem

      - name: Rsync code to EC2
        run: |
          rsync -av --delete --exclude='.git' -e "ssh -o StrictHostKeyChecking=no -i api4.pem" \
            ./ ubuntu@${{ secrets.EC2_BACKEND_IP_1 }}:/home/ubuntu/app

      - name: SSH Build & Run Docker on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i api4.pem ubuntu@${{ secrets.EC2_BACKEND_IP_1 }} << 'EOF'
            set -e
            cd /home/ubuntu/app

            # â”€â”€ 1) Create .env
            cat > .env <<ENV
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            MONGO_URI=${{ secrets.MONGO_URI }}
            MQTT_BROKER=${{ secrets.MQTT_BROKER }}
            SECRET_KEY=${{ secrets.SECRET_KEY }}
            ACCESS_TOKEN_EXPIRE_MINUTES=30
            ENV

            # â”€â”€ 2) Build Docker image locally
            docker build -t backend-image:latest .

            # â”€â”€ 3) Stop & remove old container if exists
            docker stop backend-container || true
            docker rm   backend-container || true

            # â”€â”€ 4) Run new container
            docker run -d \
              --name backend-container \
              -p 8000:8000 \
              --env-file /home/ubuntu/app/.env \
              backend-image:latest
          EOF
