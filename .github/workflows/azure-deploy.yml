name: Build and Deploy Backend

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: cicd
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache de dependências
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Criar imagem Docker do Backend
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/backend-app:latest .

      - name: Enviar imagem para o Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend-app:latest

  deploy-backend:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build-and-push
    runs-on: [self-hosted, linux, x64]
    environment: cicd
    steps:
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Parar e remover container antigo do Backend
        run: |
          docker stop backend-app || true
          docker rm backend-app || true

      - name: Limpar imagens antigas
        run: docker image prune -af

      - name: Baixar imagem mais recente do Backend
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/backend-app:latest

      - name: Iniciar novo container do Backend
        run: |
          docker run -d \
            --name backend-app \
            -p 8000:8000 \
            -e DATABASE_URL=postgresql://postgres:password@db:5432/mydatabase \
            --restart always \
            ${{ secrets.DOCKERHUB_USERNAME }}/backend-app:latest

  deploy-database:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build-and-push
    runs-on: [self-hosted, linux, x64]
    environment: cicd
    steps:
      - name: Parar e remover container antigo do Banco de Dados
        run: |
          docker stop postgres-db || true
          docker rm postgres-db || true

      - name: Limpar volumes antigos
        run: docker volume prune -f

      - name: Iniciar container do Banco de Dados
        run: |
          docker run -d \
            --name postgres-db \
            -p 5432:5432 \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=password \
            -e POSTGRES_DB=mydatabase \
            -v postgres_data:/var/lib/postgresql/data \
            --restart always \
            postgres:15-alpine