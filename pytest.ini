# /home/ubuntu/backend_fastapi_test_files/pytest.ini

[pytest]
# Define o diretório onde os testes serão procurados
testpaths = tests

# Padrão para nomes de arquivos de teste
python_files = test_*.py *_test.py

# Padrão para nomes de classes de teste (se usar classes)
python_classes = Test* *Tests

# Padrão para nomes de funções de teste
python_functions = test_*

# Opções de linha de comando padrão
# -v: verbose (mostra cada teste)
# -s: mostra output (print statements) dos testes
# --cov=.: Habilita coverage para o diretório raiz (onde main.py está)
# --cov-report=term-missing: Mostra as linhas não cobertas no terminal
addopts = -v -s --cov=. --cov-report=term-missing

# Configurações de ambiente para os testes
env =
    D:APP_ENV=test
    # Adiciona as variáveis de ambiente necessárias para a aplicação durante os testes
    D:SECRET_KEY=b3f5a8c9e2d147de8f91a6c3457d9234b6e8c1f6d2b7a4e5c3d1e8f7b9a2d6c8
    D:ACCESS_TOKEN_EXPIRE_MINUTES=30
    # URL do banco de dados de teste (SQLite por padrão)
    # Descomente a linha abaixo e comente a próxima se quiser usar PostgreSQL (requer serviço rodando)
    # D:DATABASE_URL=postgresql+asyncpg://testuser:testpassword@localhost:5432/testdb 
    D:DATABASE_URL=sqlite+aiosqlite:///./test.db

# Ignorar diretórios ou arquivos específicos
norecursedirs = .git .* venv node_modules .github

# Marcações personalizadas (opcional)
# markers =
#     slow: marca testes lentos
#     integration: marca testes de integração

